All exercises here concern the music database, which is available at 
http://tahaghoghi.com/LearningMySQL/Downloads/Files/Data/SQL_files_with_foreign_key_references/music.sql

I strongly recommend ANSI join style as per 
http://code.openark.org/blog/mysql/mysql-joins-on-vs-using-vs-theta-style - 
the nutshell is that Theta style is like this:

SELECT ... 
FROM table1 INNER JOIN table2 
WHERE field1=field2 AND filter=something;

ANSI style is like this:
SELECT ... 
FROM table1 INNER JOIN table2 ON (field1=field2) 
WHERE filter=something;

The reason for this is that when you have many tables joined 
it's easier to see the join clause in ON or USING with ANSI style. 
If you join many tables and use theta style, where everything is 
in the WHERE clause, it's possible to forget some of the join clauses 
in the WHERE. If you put the join clauses in the JOIN part, it's way more readable.

1) Use one or more SELECT statements to find out how many tracks are on New Order's Brotherhood album.


SELECT MAX(track_id)+1 
FROM track T
 
WHERE T.album_id = (SELECT Al.album_id 
		    FROM album Al
		    WHERE Al.album_name = "Brotherhood" AND

		          Al.artist_id = (SELECT A.artist_id 
					  FROM artist A

					  WHERE A.artist_name = "New Order")

		    );




2) Using a join, list the albums that we own by the band New Order


SELECT album_name

FROM album Al 
INNER JOIN artist A ON (Al.artist_id = A.artist_id)
 
WHERE A.artist_name = "New Order";




3) With INSERT statements, add the artist Leftfield to the database. 
For this new artist, add the album "Leftism" that has the following tracks:
a. Release the Pressure (Time: 7.39)
b. Afro-Melt (Time: 7.33)
c. Melt (Time: 5.21)
d. Song of Life (Time: 6.55)
e. Original (Time: 6.00)
f. Black Flute (Time: 3.46)
g. Space Shanty (Time: 7.15)
h. Inspection Check One (Time: 6.30)
i. Storm 3000 (Time: 5.44)
j. Open Up (Time: 6.52)
k. 21st Century Poem (Time: 5.42)
l. Bonus Track (Time: 1.22)

The answer to this question should be the INSERT statement(s).

SELECT MAX(artist_id) FROM artist;

/* 6 Artists already exist in artist table  */



INSERT INTO artist VALUES (7,"Leftfield"); 



/* First ablum for Leftfield  */

INSERT INTO album VALUES (7,1,"Leftism");



/* Tracks on Leftfield's Leftism album   */

/*a*/INSERT INTO track VALUES (0,"Release the Pressure",7,1,7.39);

/*b*/INSERT INTO track VALUES (1,"Afro-Melt",7,1,7.33);

/*c*/INSERT INTO track VALUES (2,"Melt",7,1,5.21);

/*d*/INSERT INTO track VALUES (3,"Song of Life",7,1,6.55);

/*e*/INSERT INTO track VALUES (4,"Original",7,1,6.00);

/*f*/INSERT INTO track VALUES (5,"Black Flute",7,1,3.46);

/*g*/INSERT INTO track VALUES (6,"Space Shanty",7,1,7.15);

/*h*/INSERT INTO track VALUES (7,"Inspection Check One",7,1,6.30);

/*i*/INSERT INTO track VALUES (8,"Storm 3000",7,1,5.44);

/*j*/INSERT INTO track VALUES (9,"Open Up",7,1,6.52);

/*k*/INSERT INTO track VALUES (10,"21st Century Poem",7,1,5.42);

/*l*/INSERT INTO track VALUES (11,"Bonus Track",7,1,1.22);


- OR -

INSERT INTO track VALUES 
/*a*/(0,"Release the Pressure",7,1,7.39),

/*b*/(1,"Afro-Melt",7,1,7.33),

/*c*/(2,"Melt",7,1,5.21),

/*d*/(3,"Song of Life",7,1,6.55),

/*e*/(4,"Original",7,1,6.00),

/*f*/(5,"Black Flute",7,1,3.46),

/*g*/(6,"Space Shanty",7,1,7.15),

/*h*/(7,"Inspection Check One",7,1,6.30),

/*i*/(8,"Storm 3000",7,1,5.44),

/*j*/(9,"Open Up",7,1,6.52),

/*k*/(10,"21st Century Poem",7,1,5.42),

/*l*/(11,"Bonus Track",7,1,1.22);



4) How long in minutes is the Leftism album you added in Question 3? Hint: use the
SUM() aggregate function.

SELECT SUM(time)

FROM track

WHERE artist_id = 7 AND album_id = 1;



5) Change the time for the Original track on the Leftism album to 6.22.


UPDATE track T SET T.time = 6.22

WHERE T.track_name = "Original" AND T.artist_id = 7;


6) Remove the 'Bonus Track' from the Leftism album,

DELETE FROM track 

WHERE track_name like "Bonus%" AND artist_id = 7;



